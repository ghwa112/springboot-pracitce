<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2024-07-25T08:38:19" hostname="DESKTOP-FTU9CMS" time="1.766">
  <properties/>
  <testcase name="deleteArticle: 블로그 글 삭제에 성공한다." classname="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" time="0.683"/>
  <testcase name="findArticle: 블로그 글 조회에 성공한다." classname="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" time="0.255"/>
  <testcase name="findAllArticles: 블로그 글 목록 조회에 성공한다." classname="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" time="0.044"/>
  <testcase name="addArticle: 블로그 글 추가에 성공한다." classname="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" time="0.663"/>
  <testcase name="updateArticle: 블로그 글 수정에 성공한다." classname="me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest" time="0.106"/>
  <system-out><![CDATA[2024-07-25T17:38:17.679+09:00  INFO 22400 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest]: BlogApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-25T17:38:17.727+09:00  INFO 22400 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration me.shindonghwa.springbootdeveloper.SpringBootDeveloperApplication for test class me.shindonghwa.springbootdeveloper.controller.BlogApiControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2024-07-25T17:38:17.801+09:00  INFO 22400 --- [    Test worker] m.s.s.controller.BlogApiControllerTest   : Starting BlogApiControllerTest using Java 17.0.11 with PID 22400 (started by PC in C:\Users\PC\Desktop\springboot-developer)
2024-07-25T17:38:17.802+09:00  INFO 22400 --- [    Test worker] m.s.s.controller.BlogApiControllerTest   : No active profile set, falling back to 1 default profile: "default"
2024-07-25T17:38:18.449+09:00  INFO 22400 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-25T17:38:18.505+09:00  INFO 22400 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
2024-07-25T17:38:18.755+09:00  INFO 22400 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-25T17:38:18.761+09:00  INFO 22400 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:a151becd-6437-4482-beeb-8da639360513 user=SA
2024-07-25T17:38:18.771+09:00  INFO 22400 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-25T17:38:18.776+09:00  INFO 22400 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-25T17:38:18.803+09:00  INFO 22400 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-07-25T17:38:18.833+09:00  INFO 22400 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-25T17:38:18.987+09:00  INFO 22400 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists article cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table article (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        author varchar(255) not null,
        content varchar(255) not null,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table refresh_token (
        id bigint generated by default as identity,
        user_id bigint not null unique,
        refresh_token varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        nickname varchar(255) unique,
        password varchar(255),
        primary key (id)
    )
2024-07-25T17:38:19.004+09:00  INFO 22400 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-25T17:38:19.187+09:00  WARN 22400 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-25T17:38:19.386+09:00  INFO 22400 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1bc6a43c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f3fa154, org.springframework.security.web.context.SecurityContextHolderFilter@2b35dde3, org.springframework.security.web.header.HeaderWriterFilter@54422189, org.springframework.web.filter.CorsFilter@6193340e, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@472073bb, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@53bf791, me.shindonghwa.springbootdeveloper.config.TokenAuthenticationFilter@7002dacc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@276511ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62ee32c6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bced0d2, org.springframework.security.web.session.SessionManagementFilter@5f7cc6fd, org.springframework.security.web.access.ExceptionTranslationFilter@1e7245da, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@962e03a]
2024-07-25T17:38:19.508+09:00  INFO 22400 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:a151becd-6437-4482-beeb-8da639360513'
2024-07-25T17:38:19.543+09:00  WARN 22400 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@4f578fc2. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-25T17:38:19.543+09:00  INFO 22400 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@4f578fc2
2024-07-25T17:38:19.544+09:00  WARN 22400 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/img/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-25T17:38:19.544+09:00  INFO 22400 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/img/**']
2024-07-25T17:38:19.544+09:00  WARN 22400 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/css/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-25T17:38:19.544+09:00  INFO 22400 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/css/**']
2024-07-25T17:38:19.544+09:00  WARN 22400 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/js/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-25T17:38:19.545+09:00  INFO 22400 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/js/**']
2024-07-25T17:38:19.661+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:19.662+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:19.664+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2024-07-25T17:38:19.686+09:00  INFO 22400 --- [    Test worker] m.s.s.controller.BlogApiControllerTest   : Started BlogApiControllerTest in 1.949 seconds (process running for 21.318)
2024-07-25T17:38:19.700+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:19.701+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:19.707+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 6 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (email, nickname, password, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        article
        (author, content, created_at, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2024-07-25T17:38:20.384+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:20.384+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:20.386+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (email, nickname, password, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        article
        (author, content, created_at, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
2024-07-25T17:38:20.643+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:20.643+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:20.645+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (email, nickname, password, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        article
        (author, content, created_at, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2024-07-25T17:38:20.689+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:20.689+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:20.691+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (email, nickname, password, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        article
        (author, content, created_at, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2024-07-25T17:38:21.363+09:00  INFO 22400 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-25T17:38:21.364+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-25T17:38:21.370+09:00  INFO 22400 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 6 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (email, nickname, password, id) 
    values
        (?, ?, ?, default)
Hibernate: 
    insert 
    into
        article
        (author, content, created_at, title, updated_at, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    update
        article 
    set
        author=?,
        content=?,
        created_at=?,
        title=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
