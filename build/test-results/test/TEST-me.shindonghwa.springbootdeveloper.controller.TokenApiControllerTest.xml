<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="me.shindonghwa.springbootdeveloper.controller.TokenApiControllerTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-07-21T16:05:51" hostname="DESKTOP-FTU9CMS" time="1.428">
  <properties/>
  <testcase name="createNewAccessToken: 새로운 액세스 토큰을 발급한다." classname="me.shindonghwa.springbootdeveloper.controller.TokenApiControllerTest" time="1.428"/>
  <system-out><![CDATA[01:05:43.351 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [me.shindonghwa.springbootdeveloper.controller.TokenApiControllerTest]: TokenApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
01:05:43.561 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration me.shindonghwa.springbootdeveloper.SpringBootDeveloperApplication for test class me.shindonghwa.springbootdeveloper.controller.TokenApiControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2024-07-22T01:05:44.279+09:00  INFO 29620 --- [    Test worker] m.s.s.controller.TokenApiControllerTest  : Starting TokenApiControllerTest using Java 17.0.11 with PID 29620 (started by PC in C:\Users\PC\Desktop\springboot-developer)
2024-07-22T01:05:44.282+09:00  INFO 29620 --- [    Test worker] m.s.s.controller.TokenApiControllerTest  : No active profile set, falling back to 1 default profile: "default"
2024-07-22T01:05:45.511+09:00  INFO 29620 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-22T01:05:45.601+09:00  INFO 29620 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78 ms. Found 3 JPA repository interfaces.
2024-07-22T01:05:46.379+09:00  INFO 29620 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-22T01:05:46.745+09:00  INFO 29620 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2024-07-22T01:05:46.749+09:00  INFO 29620 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-22T01:05:46.837+09:00  INFO 29620 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-22T01:05:46.967+09:00  INFO 29620 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.3.1.Final
2024-07-22T01:05:47.041+09:00  INFO 29620 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-07-22T01:05:47.516+09:00  INFO 29620 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-22T01:05:48.856+09:00  INFO 29620 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists article cascade 
Hibernate: 
    drop table if exists refresh_token cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table article (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        content varchar(255) not null,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table refresh_token (
        id bigint generated by default as identity,
        user_id bigint not null unique,
        refresh_token varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        password varchar(255),
        primary key (id)
    )
2024-07-22T01:05:48.932+09:00  INFO 29620 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-22T01:05:49.709+09:00  WARN 29620 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-22T01:05:50.385+09:00  INFO 29620 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@408bb173, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@360d0c7a, org.springframework.security.web.context.SecurityContextHolderFilter@213bd66a, org.springframework.security.web.header.HeaderWriterFilter@3c130cb2, org.springframework.web.filter.CorsFilter@32f8a37b, org.springframework.security.web.authentication.logout.LogoutFilter@25af1dbf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7ccfed46, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77a1df4d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bbb0a25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@657e7e8, org.springframework.security.web.access.ExceptionTranslationFilter@25fc2b8f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3368cf02]
2024-07-22T01:05:50.407+09:00  WARN 29620 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@3e3d8e6c. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-22T01:05:50.408+09:00  INFO 29620 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@3e3d8e6c
2024-07-22T01:05:50.410+09:00  WARN 29620 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/static/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-22T01:05:50.411+09:00  INFO 29620 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/static/**']
2024-07-22T01:05:51.023+09:00  INFO 29620 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2024-07-22T01:05:51.205+09:00  INFO 29620 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-22T01:05:51.205+09:00  INFO 29620 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-22T01:05:51.208+09:00  INFO 29620 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2024-07-22T01:05:51.257+09:00  INFO 29620 --- [    Test worker] m.s.s.controller.TokenApiControllerTest  : Started TokenApiControllerTest in 7.436 seconds (process running for 9.67)
2024-07-22T01:05:52.041+09:00  INFO 29620 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-07-22T01:05:52.041+09:00  INFO 29620 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-07-22T01:05:52.043+09:00  INFO 29620 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (email, password, id) 
    values
        (?, ?, default)
Hibernate: 
    insert 
    into
        refresh_token
        (refresh_token, user_id, id) 
    values
        (?, ?, default)
Hibernate: 
    select
        rt1_0.id,
        rt1_0.refresh_token,
        rt1_0.user_id 
    from
        refresh_token rt1_0 
    where
        rt1_0.refresh_token=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.password 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
